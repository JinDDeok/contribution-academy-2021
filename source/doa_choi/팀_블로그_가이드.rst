===================================
팀 블로그 가이드
===================================

해당 문서는 컨트리뷰션 기간동안 활동 결과를 정리하기 위한 문서 작성 방법을 정리하였습니다. 본 문서는 Sphinx를 이용하여 제작이 되었으며, 일반적으로 사용되는 .MD(MarkDown) 문법이 아닌, RST 기반으로 작성이 이루어집니다. 따라서 해당 글에서는 RST 기반으로 문서를 작성하는 방법과 로컬 환경에서 RST 문서를 테스트 하는 방법을 설명합니다.


01. 문서 작성을 위한 사전 준비
--------------------------------

**해당 저장소를 Fork 하여 로컬에 클론**
팀 블로그 메인 저장소에는 쓰기 권한이 할당되어 있어 바로 업로드가 되나, *반드시 작업 브랜치를 생성하여 PR를 올려주세요.*

 1. `openstack-kr/contribution-academy-2021 저장소 <https://github.com/openstack-kr/contribution-academy-2021>`_ URL로 이동합니다.
 2. 저장소 오른쪽 상단의 Fork 버튼을 눌러 본인의 계정에 Fork 합니다.

|

 .. image:: images/blog-1-1.png

|

 3. 본인의 계정 Fork 된 저장소에서 Code 버튼을 클릭하면 로컬 환경에서 클론할 수 있는 고유의 URL을 확인할 수 있습니다. 이것을 복사하여 로컬에 클론을 실행하면 폴더가 하나 만들어지면서 클론이 완료됩니다.


 .. image:: images/blog-1-2.png

|

 .. image:: images/blog-1-3.png


|

02. RST 형태로 문서 작성
--------------------------------

해당 프로젝트는 source 디렉터리가 본 프로젝트에 대한 base 폴더입니다. soruce/ 폴더의 하위에는 본인의 이름으로 되어 있는 폴더가 앞으로 본인이 작업할 폴더가 되며, 해당 폴더 내에 위치한 index.rst 파일은 목차를 보여줄 첫 페이지입니다.
폴더에서 문서를 생성하여 목차를 구성할 수 있습니다. 구체적인 설명은 하기의 내용을 참고 부탁드립니다.



문서의 목차 구성
~~~~~~~~~~~~~~~~~~~~~~~~

 .. code-block:: none

    =================== # 제목 위 아래에 등호로 표기합니다. 등호의 길이는 제목과 같거나, 길어야 합니다.
     해당 문서의 제목
    =================== # 첫번째 행 주석 설명과 같이 등호의 길이는 제목과 같거나, 길어야 합니다.

    .. toctree::        # 목차를 위한 문법입니다.
       :maxdepth: 2     # 목차의 단계를 표시합니다. 즉 하위 목차 트리를 의미합니다.
       :caption: 목차:   # 목차의 캡션을 의미합니다.

       test.rst         # 목차를 구성할 문서의 파일명을 작성해줍니다. 목차에는 해당 문서 내 제목으로 표시가 됩니다.
       dic/test.rst     # 목차 내의 폴더를 생성할 경우 폴더명/파일명 으로 작성합니다. 단, 폴더도 파일과 같이 미리 만들어두어야 합니다.


|


문서에 링크와 이미지 포함하기
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

 .. code-block:: none

    `링크이름 <https://example.org>`_ 으로 작성한다. 해당 문법의 마침표는 언더바인 '_' 기호를 포함하여야 하며, 언더바 다음에 반드시 띄어쓰기가 포함되어야 합니다.


 .. code-block:: none

     .. image:: images/image.png    # 이미지 파일의 폴더와 해당 폴더 하위에서 첨부할 이미지 파일명을 작성합니다. (절대경로)
         :height: 이미지 높이         # 이미지의 높이를 지정합니다.
         :width: 이미지 너비          # 이미지의 넓이를 지정합니다.
         :alt: 이미지 설명


|


03. 로컬 환경에서 테스트
------------------------

해당 저장소에 PR을 하게되면 CI의 WorkFlow를 통해 RST 문법대로 잘 작성이 되었는지 확인을 해주기는 하나, 로컬 환경에서 테스트를 해보는 것이 권장사항입니다.
빌드 환경은 Python 3 환경을 필요로 하며, tox 라는 프로그램을 사용하여 로컬 환경 혹은 가상 환경 내에서 문서의 문법을 검사하고 빌드할 수 있습니다.

*문서 빌드는 다음 명령어로 합니다.*

 .. code-block:: none

    tox -e docs
     (or) tox


만일 RST 문법상 오류가 있을 경우 로그에서 잘못된 문법을 출력하고 빌드가 중단됩니다.



